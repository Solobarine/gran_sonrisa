<% content_for :settings_content do %>
  <div id="content">
    <div id="edit_user">
      <div id="form_container">
        <h2>Edit <%= resource_name.to_s.humanize %> Information</h2>
        <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
          <div class="field">
            <div>
              <i class="fa-solid fa-user"></i>
              <%= f.text_field :first_name, autofocus: true, autocomplete: "first_name" %>
            </div>
            <%# f.label :first_name %>
            <%= render 'devise/shared/errors', errors: resource.errors['first_name']%>
          </div>
          <div class="field">
            <div>
              <i class="fa-solid fa-user"></i>
              <%= f.text_field :last_name, autofocus: true, autocomplete: "last_name" %>
            </div>
            <%# f.label :last_name %>
            <%= render 'devise/shared/errors', errors: resource.errors['last_name'] %>
          </div>
          <div class="field">
            <div>
              <i class="fa-solid fa-image"></i>
              <%= f.file_field :avatar, autofocus: true %>
            </div>
            <%# f.label :avatar %>
            <%= render 'devise/shared/errors', errors: resource.errors['avatar'] %>
          </div>
          <div class="field">
            <%# f.label :email %>
            <div>
              <i class="fa-solid fa-envelope"></i>
              <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
            </div>
            <%= render 'devise/shared/errors', errors: resource.errors['email'] %>
          </div>
          <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
            <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
          <% end %>
          <div class="field">
            <div>
              <i class="fa-solid fa-lock"></i>
              <%= f.password_field :current_password, autocomplete: "current-password", placeholder: 'Enter Password' %>
            </div>
          </div>
          <%= f.submit "Update", id: 'update' %>
        <% end %>
      </div>
      <hr>
      <div id="account_removal">
        <h3>Cancel my account</h3>
        <div>
          <p>Clicking the Button will Remove your Data from our Servers. Are you sure you want to proceed?</p>
          <button id="open_modal">Delete My Account</button>
          <dialog id='confirmation'>
            <button class='close exit'>&times;</button>
            <p>Are You Sure?</p>
            <div>
              <button class='close'>Cancel</button>
              <%= button_to "Delete", registration_path(resource_name), data: { confirm: "Are you sure?", turbo_confirm: "Are you sure?" }, method: :delete %>
            </div>
          </dialog>
        </div>
      </div>
      <hr>
      <%= link_to "Go Back", :back, class: 'go_back' %>
    </div>
  </div>
  <script defer>
    const modal = document.querySelector('#confirmation')
    const close = document.getElementsByClassName('close')
    const open = document.querySelector('#open_modal')
    console.log(close.modal);

    const openModal = (e) => {
      modal.show()
    }

    const closeModal = (e) => {
      // e.preventDefault()
      modal.close()
    }

    // Add Event Listeners
    open.addEventListener('click', () => openModal())
    let i = 0
    while (i < close.length) {
      close[i].addEventListener('click', () => closeModal())
      if (close[i].classList.contains('exit')) {
        close[i].addEventListener('blur', () => closeModal())
      }
      i++
    }
  </script>
<% end %>
<%= render template: 'users/settings'%>
